import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as p,c as d,d as t,b as a,a as e,e as s,f as i}from"./app-4864bddc.js";const o={},c=i(`<h1 id="opensuse的一些使用心得" tabindex="-1"><a class="header-anchor" href="#opensuse的一些使用心得" aria-hidden="true">#</a> openSuSE的一些使用心得</h1><h2 id="调整opensuse屏幕亮度" tabindex="-1"><a class="header-anchor" href="#调整opensuse屏幕亮度" aria-hidden="true">#</a> 调整openSuSE屏幕亮度</h2><p>找了很多教程，参考后自己摸索出来了，记录一下。</p><p>系统版本：openSuSE Leap 15.4</p><p>桌面环境：KDE</p><hr><h3 id="一、找到本机专属的brightness文件手动修改亮度" tabindex="-1"><a class="header-anchor" href="#一、找到本机专属的brightness文件手动修改亮度" aria-hidden="true">#</a> 一、找到本机专属的brightness文件手动修改亮度</h3><p>首先确定自己系统用的驱动，这会决定亮度文件的位置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /sys/class/backlight/

<span class="token function">ls</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我是手动重装过NVIDIA驱动的，并不是openSuSE自带的开源驱动nouveau，所以这里的文件夹是nvidia_0，其他驱动需要仔细看好。</p><p><strong>注意，不要盲目使用网上的路径，因为本机使用的驱动不一定和他们一样！</strong></p><p>接着进入文件夹</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> nvidia_0

<span class="token function">sudo</span> <span class="token function">vi</span> brightness
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在vi窗口里更改数字调整亮度（我一般调整为5,黑暗环境调整为2，默认是10）。数字越大，亮度越高。保存后，亮度会立即改变。</p><hr><h3 id="二、使用shell脚本修改亮度" tabindex="-1"><a class="header-anchor" href="#二、使用shell脚本修改亮度" aria-hidden="true">#</a> 二、使用shell脚本修改亮度</h3><p>每次调亮度都要去里面改，不免有些麻烦，可以写一个shell脚本帮助调整。</p><p>在家目录下新建文件，文件名随意，好记就行，例如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">touch</span> bright.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在文件里写入</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>

<span class="token comment"># 这个nvidia_0要改成本机brightness的目录，不一定是nvidia_0</span>

<span class="token builtin class-name">cd</span> /sys/class/backlight/nvidia_0

<span class="token function">sudo</span> <span class="token builtin class-name">echo</span> <span class="token variable">$1</span> <span class="token operator">&gt;</span> brightness

<span class="token builtin class-name">echo</span> <span class="token string">&quot;更改当前亮度为<span class="token variable">$1</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存。需要调整亮度时，直接在家目录下输入命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">sh</span> bright.sh 亮度值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>回车，就可以调整亮度了。例如我要调整亮度为2，就在终端中输入</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">sh</span> bright.sh <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>回车即可修改。</p><hr><h3 id="三、开机自动调整亮度" tabindex="-1"><a class="header-anchor" href="#三、开机自动调整亮度" aria-hidden="true">#</a> 三、开机自动调整亮度</h3><p>openSuSE开机会自动把屏幕调到最亮，所以用crontab -e做个开机自动调整屏幕亮度到一个合适大小，防止闪瞎。我这里选的亮度是5。</p><p>在终端中输入</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">crontab</span> <span class="token parameter variable">-e</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在弹出来的窗口输入</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@reboot sleep 5; nohup sh /home/yang/bright.sh 5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中yang是我的用户名，需要把用户名改成自己的，或者什么别的路径。<br> 为了捕获可能的错误，还需要写一个log文件，把crontab -e中的内容修改一下</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@reboot sleep 5; nohup sh /home/yang/bright.sh 5 &gt; /home/yang/log/bright.log 2&gt;&amp;1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>sleep 5指的是，启动后先休眠5秒再执行，以防止因为其他项目还没加载好就执行，导致找不到文件的错误。</p><p>这个/home/yang/log文件夹是我自己在家目录创建的，原本并没有这个目录。我创建这个log文件夹是为了保存各种log，方便找。</p><p>保存，重启尝试。我的电脑上没问题，成功了。</p><h2 id="libreoffice套件文件处理" tabindex="-1"><a class="header-anchor" href="#libreoffice套件文件处理" aria-hidden="true">#</a> libreoffice套件文件处理</h2><p>libreoffice是OpenSUSE自带的开源的文档处理工具，它提供了一些方便的命令，比如这里介绍的把doc或其他一些格式转换成pdf的工具。另外，还可以方便地把多个pdf文件合成一个。</p><p>批处理doc、docx和ppt、pptx，将其转换为pdf</p><ol><li><p>进入文件所在目录</p></li><li><p>输入如下命令</p></li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>libreoffice <span class="token parameter variable">--invisible</span> --convert-to pdf xxx.doc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这句话是把xxx.doc转化为pdf文件，改成其他三个也可以转换成pdf。</p><ol start="3"><li>如果需要批处理，可以输入下面的命令</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>libreoffice <span class="token parameter variable">--invisible</span> --convert-to pdf *.doc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>就能把当前目录的所有doc后缀文件都转换成pdf文件，接着打包就行。</p><ol start="4"><li>合并PDF</li></ol><p>pdfunite *.pdf xxx.pdf</p><p>把当前目录下的所有pdf合并成xxx.pdf</p><h2 id="各种源的添加方法-来源网络-侵删" tabindex="-1"><a class="header-anchor" href="#各种源的添加方法-来源网络-侵删" aria-hidden="true">#</a> 各种源的添加方法（来源网络，侵删）</h2><h3 id="一、zypper源" tabindex="-1"><a class="header-anchor" href="#一、zypper源" aria-hidden="true">#</a> 一、zypper源</h3><h4 id="ustc" tabindex="-1"><a class="header-anchor" href="#ustc" aria-hidden="true">#</a> USTC</h4>`,53),u={href:"http://mirrors.ustc.edu.cn/help/opensuse.html",target:"_blank",rel:"noopener noreferrer"},h=e("h4",{id:"清华",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#清华","aria-hidden":"true"},"#"),a(" 清华")],-1),b={href:"https://mirrors.tuna.tsinghua.edu.cn/help/opensuse/",target:"_blank",rel:"noopener noreferrer"},v=e("h4",{id:"opensuse-leap-15-2-或更新版本使用方法",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#opensuse-leap-15-2-或更新版本使用方法","aria-hidden":"true"},"#"),a(" openSUSE Leap 15.2 或更新版本使用方法")],-1),m=e("p",null,"禁用官方软件源",-1),g=e("p",null,"sudo zypper mr -da",-1),f=e("p",null,"添加 TUNA 镜像源",-1),k={href:"https://mirrors.tuna.tsinghua.edu.cn/opensuse/distribution/leap/$releasever/repo/oss/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://mirrors.tuna.tsinghua.edu.cn/opensuse/distribution/leap/$releasever/repo/non-oss/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://mirrors.tuna.tsinghua.edu.cn/opensuse/update/leap/$releasever/oss/",target:"_blank",rel:"noopener noreferrer"},S={href:"https://mirrors.tuna.tsinghua.edu.cn/opensuse/update/leap/$releasever/non-oss/",target:"_blank",rel:"noopener noreferrer"},y=e("p",null,"Leap 15.3 用户还需添加 sle 和 backports 源",-1),w={href:"https://mirrors.tuna.tsinghua.edu.cn/opensuse/update/leap/$releasever/sle/",target:"_blank",rel:"noopener noreferrer"},E={href:"https://mirrors.tuna.tsinghua.edu.cn/opensuse/update/leap/$releasever/backports/",target:"_blank",rel:"noopener noreferrer"},z=e("p",null,"Leap 15.3 注：若在安装时没有启用在线软件源， sle 源和 backports 源将在系统首次更新后引入，请确保系统在更新后仅启用了六个所需软件源。可使用 zypper lr 检查软件源状态，并使用 zypper mr -d 禁用多余的软件源。",-1),$=e("h3",{id:"二、anaconda源",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#二、anaconda源","aria-hidden":"true"},"#"),a(" 二、Anaconda源")],-1),P={href:"https://mirrors4.tuna.tsinghua.edu.cn/help/anaconda/",target:"_blank",rel:"noopener noreferrer"},T=e("ol",null,[e("li",null,[e("p",null,"打开~/.condarc")]),e("li",null,[e("p",null,"按提示操作")])],-1),j=e("h3",{id:"三、pip源",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#三、pip源","aria-hidden":"true"},"#"),a(" 三、pip源")],-1),A={href:"https://mirrors.tuna.tsinghua.edu.cn/help/pypi/",target:"_blank",rel:"noopener noreferrer"},L=i(`<h2 id="安装quantum-espresso" tabindex="-1"><a class="header-anchor" href="#安装quantum-espresso" aria-hidden="true">#</a> 安装Quantum ESPRESSO</h2><h3 id="_0-本机环境" tabindex="-1"><a class="header-anchor" href="#_0-本机环境" aria-hidden="true">#</a> 0. 本机环境</h3><p>系统： openSuSE 15.4 Leap</p><p>CPU： R7 5800H</p><p>GPU： RTX 3060 Laptop</p><h3 id="_1-必要环境-串行计算" tabindex="-1"><a class="header-anchor" href="#_1-必要环境-串行计算" aria-hidden="true">#</a> 1. 必要环境(串行计算)</h3><p>必要的包：</p><p>a. liblapack</p><p>b. libblas</p><p>c. gfortran</p><p>d. make</p><h3 id="_2-环境安装" tabindex="-1"><a class="header-anchor" href="#_2-环境安装" aria-hidden="true">#</a> 2. 环境安装</h3><p>a. liblapack</p><p>因为是openSuSE，可以直接用包管理器YaST解决这个问题。这里推荐是，就算安装过了liblapack，也要删掉后重装一遍。</p><p>打开YaST，点击“软件管理”，在左边搜索栏输入liblapack，等搜索出来后，点前面的勾，把它变成红色减号，点右下角接受。</p><p>然后再次搜索，重新点回来。</p><p>b. libblas</p><p>安装同上。</p><p>c. gfortran</p><p>同样可以使用YaST安装，安装gfortran4就可以。</p><p>也可以用命令行安装：</p><p>先卸载自带的gcc和gfortran。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">zypper</span> <span class="token function">rm</span> gcc

<span class="token function">sudo</span> <span class="token function">zypper</span> <span class="token function">rm</span> gfortran

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在命令行输入cnf gfortran， 找到包含这条命令的代码。</p><p>先安装回gcc，再安装回gfortran。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">zypper</span> <span class="token keyword">in</span> gcc

<span class="token function">sudo</span> <span class="token function">zypper</span> <span class="token keyword">in</span> libgfortran4

就可以了。两者其实没有差异，用YaST安装更方便。

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>d. make</p><p>这个很随意，用YaST安装就可以了。</p><p>或者命令行输入</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">zypper</span> <span class="token keyword">in</span> <span class="token function">make</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-quantum-espresso下载" tabindex="-1"><a class="header-anchor" href="#_3-quantum-espresso下载" aria-hidden="true">#</a> 3. Quantum ESPRESSO下载</h3>`,31),N={href:"https://www.quantum-espresso.org/",target:"_blank",rel:"noopener noreferrer"},q=i(`<p>点导航栏Download，在页面中选择software，点击名字。</p><p>如果没有注册过，需要注册。</p><p>然后就自动下载了。</p><h3 id="_4-软件安装" tabindex="-1"><a class="header-anchor" href="#_4-软件安装" aria-hidden="true">#</a> 4. 软件安装</h3><p>首先把压缩包qe-7.1-ReleasePack.tar.gz解压到放软件的地方。</p><p>cd进入解压出来的文件夹，然后按顺序执行命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 配置默认编译环境</span>
./configure

<span class="token comment"># 开始编译安装，自行选择需要安装的库，比如这里的pwall、tddfpt、xspectra、cp</span>
<span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">4</span> pwall

<span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">4</span> tddfpt

<span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">4</span> xspectra

<span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">4</span> <span class="token function">cp</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里记录一个过往版本不适用于现在版本的问题：</p><p>现在版本中，pw.x不再使用pw编译名，而是使用pwall，谨记。</p><p>-j 4指的是使用4个核并行编译，能快很多。</p><p>这四个模块(主要是pwall)是用来计算能带等数据的，应该符合我需要算的东西的，所以装这个。</p><p>编译完成后，进入bin文件夹，如果能看到许多*.x的文件就说明成功。注意看一下有没有核心可执行文件pw.x的存在。</p><h3 id="_5-并行计算增补说明" tabindex="-1"><a class="header-anchor" href="#_5-并行计算增补说明" aria-hidden="true">#</a> 5. 并行计算增补说明</h3><p>刚才是没有并行计算模块mpi的安装方法。如果要加上并行计算，需要在安装多安装一个mpich的软件。</p><p>首先进入官网下载：</p><p><a href="">点击访问MPICH官网</a></p><p>安装MPICH需要补充的库： g++</p><p>直接装就行，或者在命令行输入cnf g++ ，然后装它提供的那个。</p><p>下载后，解压到存放的位置，然后进入。</p><p>然后在命令行里依次输入下面这段代码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 等号后面是文件安装路径</span>

./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr/local/mpich

<span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">8</span>

<span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">8</span> <span class="token function">install</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>多核并行编译快很多。</p><p>然后，在~/.bashrc里添加</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/home/yang/software/packages/mpich/bin:<span class="token environment constant">$PATH</span>

<span class="token builtin class-name">export</span> <span class="token assign-left variable">MANPATH</span><span class="token operator">=</span>/home/tiger/software/packages/mpich/man:<span class="token variable">$MANPATH</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>就可以了，先在命令行里输入重新载入环境变量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> ~/.bashrc

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后输入</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mpif90 <span class="token parameter variable">-v</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>只要有内容，就成功了。</p><p>接着需要编译一下QE。</p><p>如果之前编译过QE了，需要先到QE的文件夹下，输入make clean清除所有编译过的内容，然后输入</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./configure -enable-parallel

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>注意看一下文字最后的附近有没有parallel successfully这样的字样。</p><p>之后的操作步骤就和之前串行的一样了。</p><h3 id="_6-异构计算增补说明" tabindex="-1"><a class="header-anchor" href="#_6-异构计算增补说明" aria-hidden="true">#</a> 6. 异构计算增补说明</h3><p>因为我是单机运行，不需要异构计算，所以这个不讲。</p><h3 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考:</h3>`,37),H={href:"https://www.guanjihuan.com/archives/12325",target:"_blank",rel:"noopener noreferrer"},C={href:"https://www.bilibili.com/read/cv18425985",target:"_blank",rel:"noopener noreferrer"},I={href:"https://blog.csdn.net/sinat_30967935/article/details/82988659",target:"_blank",rel:"noopener noreferrer"};function Q(R,U){const n=l("ExternalLinkIcon");return p(),d("div",null,[t(" more "),a("之前因为需要，用了一段时间的openSuSE，感觉这是个非常不错的Linux操作系统，兼容性特别强，界面做得也很好看。在使用过程中解决过一些问题，所以趁着写博客就一起放出来。 "),c,e("p",null,[e("a",u,[a("http://mirrors.ustc.edu.cn/help/opensuse.html"),s(n)])]),h,e("p",null,[e("a",b,[a("https://mirrors.tuna.tsinghua.edu.cn/help/opensuse/"),s(n)])]),v,m,g,f,e("p",null,[a("sudo zypper ar -cfg '"),e("a",k,[a("https://mirrors.tuna.tsinghua.edu.cn/opensuse/distribution/leap/$releasever/repo/oss/"),s(n)]),a("' tuna-oss")]),e("p",null,[a("sudo zypper ar -cfg '"),e("a",_,[a("https://mirrors.tuna.tsinghua.edu.cn/opensuse/distribution/leap/$releasever/repo/non-oss/"),s(n)]),a("' tuna-non-oss")]),e("p",null,[a("sudo zypper ar -cfg '"),e("a",x,[a("https://mirrors.tuna.tsinghua.edu.cn/opensuse/update/leap/$releasever/oss/"),s(n)]),a("' tuna-update")]),e("p",null,[a("sudo zypper ar -cfg '"),e("a",S,[a("https://mirrors.tuna.tsinghua.edu.cn/opensuse/update/leap/$releasever/non-oss/"),s(n)]),a("' tuna-update-non-oss")]),y,e("p",null,[a("sudo zypper ar -cfg '"),e("a",w,[a("https://mirrors.tuna.tsinghua.edu.cn/opensuse/update/leap/$releasever/sle/"),s(n)]),a("' tuna-sle-update")]),e("p",null,[a("sudo zypper ar -cfg '"),e("a",E,[a("https://mirrors.tuna.tsinghua.edu.cn/opensuse/update/leap/$releasever/backports/"),s(n)]),a("' tuna-backports-update")]),z,$,e("p",null,[e("a",P,[a("https://mirrors4.tuna.tsinghua.edu.cn/help/anaconda/"),s(n)])]),T,j,e("p",null,[e("a",A,[a("https://mirrors.tuna.tsinghua.edu.cn/help/pypi/"),s(n)])]),L,e("p",null,[e("a",N,[a("点击访问Quantum ESPRESSO官网"),s(n)])]),q,e("p",null,[a("[1] "),e("a",H,[a("https://www.guanjihuan.com/archives/12325"),s(n)])]),e("p",null,[a("[2] "),e("a",C,[a("https://www.bilibili.com/read/cv18425985"),s(n)])]),e("p",null,[a("[3] MPICH安装参考： "),e("a",I,[a("https://blog.csdn.net/sinat_30967935/article/details/82988659"),s(n)])])])}const Y=r(o,[["render",Q],["__file","openSuSE使用心得.html.vue"]]);export{Y as default};
